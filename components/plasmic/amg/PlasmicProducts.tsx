// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 6cFjuLeo5wcsmGdjkGwU6
// Component: r6aTKPzoXi1u

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { NavigationBar } from "@plasmicpkgs/plasmic-nav";
import Button from "../../Button"; // plasmic-import: DwYLxxR6FM2H/component

import { useScreenVariants as useScreenVariantsuI1HQw2QRBwD } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: uI1hQw2qRBwD/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 6cFjuLeo5wcsmGdjkGwU6/projectcss
import sty from "./PlasmicProducts.module.css"; // plasmic-import: r6aTKPzoXi1u/css

import Asset12SvgIcon from "./icons/PlasmicIcon__Asset12Svg"; // plasmic-import: 7CPcspNX8sPi/icon
import Asset13SvgIcon from "./icons/PlasmicIcon__Asset13Svg"; // plasmic-import: oZDO5r2l4Elq/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: 8dWY6q-cxdHa/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: qHDe3SKps_Kk/icon
import Asset14SvgIcon from "./icons/PlasmicIcon__Asset14Svg"; // plasmic-import: kDLG4wAIqP_D/icon
import Asset15SvgIcon from "./icons/PlasmicIcon__Asset15Svg"; // plasmic-import: 6TBXxKoNY6bp/icon
import Asset17SvgIcon from "./icons/PlasmicIcon__Asset17Svg"; // plasmic-import: SXjGg-SVFrGm/icon
import Asset16SvgIcon from "./icons/PlasmicIcon__Asset16Svg"; // plasmic-import: jrHOvkK-XM6e/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: Z5SzEe0I5ZF-/icon

createPlasmicElementProxy;

export type PlasmicProducts__VariantMembers = {};
export type PlasmicProducts__VariantsArgs = {};
type VariantPropType = keyof PlasmicProducts__VariantsArgs;
export const PlasmicProducts__VariantProps = new Array<VariantPropType>();

export type PlasmicProducts__ArgsType = {};
type ArgPropType = keyof PlasmicProducts__ArgsType;
export const PlasmicProducts__ArgProps = new Array<ArgPropType>();

export type PlasmicProducts__OverridesType = {
  root?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  citadel?: Flex__<"div">;
  citadel2?: Flex__<"div">;
  citadel3?: Flex__<"div">;
  footer?: Flex__<"div">;
};

export interface DefaultProductsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicProducts__RenderFunc(props: {
  variants: PlasmicProducts__VariantsArgs;
  args: PlasmicProducts__ArgsType;
  overrides: PlasmicProducts__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsuI1HQw2QRBwD()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            brand={
              <PlasmicLink__
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__zPqZ5
                )}
                component={Link}
                href={"#"}
                platform={"nextjs"}
              >
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__qkdfe
                  )}
                  component={Link}
                  href={`/`}
                  platform={"nextjs"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___50Loa)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    src={{
                      src: "/plasmic/amg/images/asset10Svg.svg",
                      fullWidth: 127.08,
                      fullHeight: 34.07,
                      aspectRatio: 3.729968
                    }}
                  />
                </PlasmicLink__>
              </PlasmicLink__>
            }
            className={classNames("__wab_instance", sty.navigationBar)}
            closeButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__ymsUy)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                src={"https://static1.plasmic.app/close.svg"}
              />
            }
            itemsGap={8}
            menuItems={
              <React.Fragment>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__hdL5B
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"Home"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__lKykv
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"About"}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__zs5Lg
                  )}
                  component={Link}
                  href={"/"}
                  platform={"nextjs"}
                >
                  {"Contact"}
                </PlasmicLink__>
              </React.Fragment>
            }
            openButton={
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__yz4Wb)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"none"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                height={""}
                src={"https://static1.plasmic.app/menu.svg"}
                width={"32"}
              />
            }
            responsiveBreakpoint={768}
          />

          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__yAnO4)}
          >
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                projectcss.__wab_text,
                sty.link__mjuo
              )}
              component={Link}
              href={`/`}
              platform={"nextjs"}
            >
              {"BACK TO HOME"}
            </PlasmicLink__>
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__knx0K
              )}
            >
              {"Sneaker Shoe Box"}
            </h3>
          </Stack__>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__v3Y7C)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"320px"}
            loading={"lazy"}
            src={{
              src: "/plasmic/amg/images/luxuryCustomCajasZapatosRedPaperSneakerPackagingShoeBoxStorageSneakerBoxForSneaker4Jpg.jpg",
              fullWidth: 1000,
              fullHeight: 1000,
              aspectRatio: undefined
            }}
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__eFgb
            )}
          >
            {
              "Box dengan tutup terpisah yang biasanya digunakan untuk produk alas kaki, seperti sepatu, sandal, sandal jepit, boots, dan lain-lain."
            }
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__fSg)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__a1RCe
              )}
            >
              {"Specifications"}
            </h3>
            <div className={classNames(projectcss.all, sty.freeBox__lofM0)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hibQo)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__oM6Yw
                  )}
                >
                  {"Ketebalan"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sBDo)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Dbc
                    )}
                  >
                    {"3 mm"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xiJbE
                    )}
                  >
                    {"4 mm"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__f4XfJ)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__okcZq
                  )}
                >
                  {"Warna Dasar"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__durLg)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___4FWu1)}
                  >
                    <Asset12SvgIcon
                      className={classNames(projectcss.all, sty.svg__iBuBe)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iouoo
                      )}
                    >
                      {"Kraft"}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lfuj)}
                  >
                    <Asset13SvgIcon
                      className={classNames(projectcss.all, sty.svg___0J7Fq)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lUaF
                      )}
                    >
                      {"Putih"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox___0CDfa)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wtQlg)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__y7OCw
                  )}
                >
                  {"Min Order Quantity"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cqdIu)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8DVZj
                    )}
                  >
                    {"300 pcs"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cuajK)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zflTe
                  )}
                >
                  {"Customizable"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___3JT)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bDwx
                    )}
                  >
                    {"Yes"}
                  </div>
                </Stack__>
              </Stack__>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__cj11O)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hkOmt)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sJbj
                  )}
                >
                  {"Komposisi"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mjHQa)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yIuMa
                    )}
                  >
                    {"Kraft"}
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rqe)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c7Dg
                  )}
                >
                  {"Tipe"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___9CGj3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__sjfew
                    )}
                  >
                    {"Single wall"}
                  </div>
                </Stack__>
              </Stack__>
            </div>
          </Stack__>
          <Button
            className={classNames("__wab_instance", sty.button__ccSuz)}
            color={"sand"}
            shape={"rounded"}
          >
            {"TAMBAHKAN KE INQUIRY"}
          </Button>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___9UG3V)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__v0Fk9
              )}
            >
              {"Bagikan Produk"}
            </h3>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qpKzZ)}
            >
              <Asset14SvgIcon
                className={classNames(projectcss.all, sty.svg__azVvy)}
                role={"img"}
              />

              <Asset15SvgIcon
                className={classNames(projectcss.all, sty.svg__lkpEs)}
                role={"img"}
              />

              <Asset17SvgIcon
                className={classNames(projectcss.all, sty.svg__fH8Ik)}
                role={"img"}
              />

              <Asset16SvgIcon
                className={classNames(projectcss.all, sty.svg__prbgp)}
                role={"img"}
              />
            </Stack__>
          </Stack__>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__naQp)}
            displayHeight={"200px"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"100%"}
            loading={"lazy"}
            src={{
              src: "/plasmic/amg/images/_20211007160317Jpg.jpg",
              fullWidth: 980,
              fullHeight: 680,
              aspectRatio: undefined
            }}
          />

          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__tQfmb)}
          >
            <h3
              className={classNames(
                projectcss.all,
                projectcss.h3,
                projectcss.__wab_text,
                sty.h3__nHvNh
              )}
            >
              {"RELATED PRODUCT"}
            </h3>
            <Stack__
              as={"div"}
              data-plasmic-name={"citadel"}
              data-plasmic-override={overrides.citadel}
              hasGap={true}
              className={classNames(projectcss.all, sty.citadel)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__h0KRu)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lqKJh
                  )}
                >
                  {"Plastic Paper Box"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__h207L)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ff6V
                    )}
                  >
                    {"Lebih Lanjut"}
                  </div>
                  <Icon2Icon
                    className={classNames(projectcss.all, sty.svg__qbhxM)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__yw1F2)}
                displayHeight={"160px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/amg/images/caixaCartaoRectangularKraft1000MlComTampaPpSlideShow1Jpg.jpg",
                  fullWidth: 1080,
                  fullHeight: 1080,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"citadel2"}
              data-plasmic-override={overrides.citadel2}
              hasGap={true}
              className={classNames(projectcss.all, sty.citadel2)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qcRqy)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iK4D
                  )}
                >
                  {"Food Paper Box"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__e2Jzt)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0BYfF
                    )}
                  >
                    {"Lebih Lanjut"}
                  </div>
                  <Icon2Icon
                    className={classNames(projectcss.all, sty.svg__rk98Q)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__syVib)}
                displayHeight={"160px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/amg/images/asset152X280X300Png.png",
                  fullWidth: 280,
                  fullHeight: 300,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"citadel3"}
              data-plasmic-override={overrides.citadel3}
              hasGap={true}
              className={classNames(projectcss.all, sty.citadel3)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__g7QLq)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fmtoh
                  )}
                >
                  {"Partition Box"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___8FFed)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jqRkn
                    )}
                  >
                    {"Lebih Lanjut"}
                  </div>
                  <Icon2Icon
                    className={classNames(projectcss.all, sty.svg__gsB2)}
                    role={"img"}
                  />
                </Stack__>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___0Wd0E)}
                displayHeight={"160px"}
                displayMaxHeight={"none"}
                displayMaxWidth={"auto"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"160px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/amg/images/imagesjpeg.jpg",
                  fullWidth: 238,
                  fullHeight: 212,
                  aspectRatio: undefined
                }}
              />
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            hasGap={true}
            className={classNames(projectcss.all, sty.footer)}
          >
            <PlasmicLink__
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__xXeMt
              )}
              component={Link}
              href={`/`}
              platform={"nextjs"}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__n9ONi)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"200px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/amg/images/asset11Svg.svg",
                  fullWidth: 127.08,
                  fullHeight: 34.07,
                  aspectRatio: 3.729968
                }}
              />
            </PlasmicLink__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__oxS3
              )}
            >
              {
                "PT Mulia Grand Manufacture was established in August 2015 in Boboh \u2013 Menganti area. Our company is specialized in the production of corrugated cardboard and cardboard boxes."
              }
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__w0Pof)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xm38W)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2T6Gj
                  )}
                >
                  {"Company"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hyFpV
                  )}
                >
                  {"Home"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1WxJ9
                  )}
                >
                  {"Our Business"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r0PkM
                  )}
                >
                  {"About Us"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wIuhz)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__aLuMr
                  )}
                >
                  {"Join With Us"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ayqO5
                  )}
                >
                  {"Carrer"}
                </div>
              </Stack__>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__clAp5)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vPN1
                )}
              >
                {"Quick Contact"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xmdIm
                )}
              >
                {
                  "If you have any questions or need help, feel free to contact us"
                }
              </div>
              <Button
                className={classNames("__wab_instance", sty.button__lo9NJ)}
                color={"sand"}
                shape={"rounded"}
              >
                {"GET INQUIRY"}
              </Button>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vVyXw)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jFQt
                )}
              >
                {"031 7997 0889"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___9Y5IU
                )}
              >
                {
                  "Jl. Raya Boboh No.89, RT. 05/RW 03, Desa Boboh Kec. Menganti, Kabupaten Gresik, Jawa Timur 61174"
                }
              </div>
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__axKvj
              )}
            >
              {"Copyright 2022 \u00a9 PT Artaniaga Megah Gemilang"}
            </div>
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "navigationBar", "citadel", "citadel2", "citadel3", "footer"],
  navigationBar: ["navigationBar"],
  citadel: ["citadel"],
  citadel2: ["citadel2"],
  citadel3: ["citadel3"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  citadel: "div";
  citadel2: "div";
  citadel3: "div";
  footer: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProducts__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProducts__VariantsArgs;
    args?: PlasmicProducts__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProducts__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicProducts__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProducts__ArgProps,
          internalVariantPropNames: PlasmicProducts__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProducts__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProducts";
  } else {
    func.displayName = `PlasmicProducts.${nodeName}`;
  }
  return func;
}

export const PlasmicProducts = Object.assign(
  // Top-level PlasmicProducts renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    citadel: makeNodeComponent("citadel"),
    citadel2: makeNodeComponent("citadel2"),
    citadel3: makeNodeComponent("citadel3"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicProducts
    internalVariantProps: PlasmicProducts__VariantProps,
    internalArgProps: PlasmicProducts__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProducts;
/* prettier-ignore-end */
